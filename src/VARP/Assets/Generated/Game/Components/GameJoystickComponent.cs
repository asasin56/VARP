//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity joystickEntity { get { return GetGroup(GameMatcher.Joystick).GetSingleEntity(); } }
    public Game.JoystickComponent joystick { get { return joystickEntity.joystick; } }
    public bool hasJoystick { get { return joystickEntity != null; } }

    public GameEntity SetJoystick(Joystick newValue) {
        if (hasJoystick) {
            throw new Entitas.EntitasException("Could not set Joystick!\n" + this + " already has an entity with Game.JoystickComponent!",
                "You should check if the context already has a joystickEntity before setting it or use context.ReplaceJoystick().");
        }
        var entity = CreateEntity();
        entity.AddJoystick(newValue);
        return entity;
    }

    public void ReplaceJoystick(Joystick newValue) {
        var entity = joystickEntity;
        if (entity == null) {
            entity = SetJoystick(newValue);
        } else {
            entity.ReplaceJoystick(newValue);
        }
    }

    public void RemoveJoystick() {
        joystickEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Game.JoystickComponent joystick { get { return (Game.JoystickComponent)GetComponent(GameComponentsLookup.Joystick); } }
    public bool hasJoystick { get { return HasComponent(GameComponentsLookup.Joystick); } }

    public void AddJoystick(Joystick newValue) {
        var index = GameComponentsLookup.Joystick;
        var component = (Game.JoystickComponent)CreateComponent(index, typeof(Game.JoystickComponent));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceJoystick(Joystick newValue) {
        var index = GameComponentsLookup.Joystick;
        var component = (Game.JoystickComponent)CreateComponent(index, typeof(Game.JoystickComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveJoystick() {
        RemoveComponent(GameComponentsLookup.Joystick);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherJoystick;

    public static Entitas.IMatcher<GameEntity> Joystick {
        get {
            if (_matcherJoystick == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Joystick);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherJoystick = matcher;
            }

            return _matcherJoystick;
        }
    }
}
